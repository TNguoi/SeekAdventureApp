{"ast":null,"code":"import { vars as vars$1 } from \"./styles/lib/themes/vars.css.mjs\";\nimport { atoms as atoms$1 } from \"./styles/lib/css/atoms/atoms.mjs\";\nimport { colorModeStyle } from \"./styles/lib/css/colorModeStyle.mjs\";\nimport { responsiveStyle } from \"./styles/lib/css/responsiveStyle.mjs\";\nimport { breakpoints } from \"./styles/lib/css/breakpoints.mjs\";\nconst globalTextStyle = function () {\n  let {\n    weight = \"regular\",\n    size = \"standard\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    fontFamily: vars$1.fontFamily,\n    fontWeight: vars$1.textWeight[weight],\n    color: vars$1.foregroundColor.neutral,\n    ...responsiveStyle({\n      mobile: {\n        fontSize: vars$1.textSize[size].mobile.fontSize,\n        lineHeight: vars$1.textSize[size].mobile.lineHeight\n      },\n      tablet: {\n        fontSize: vars$1.textSize[size].tablet.fontSize,\n        lineHeight: vars$1.textSize[size].tablet.lineHeight\n      }\n    })\n  };\n};\nconst globalHeadingStyle = _ref => {\n  let {\n    weight = \"regular\",\n    level\n  } = _ref;\n  return {\n    fontFamily: vars$1.fontFamily,\n    fontWeight: vars$1.headingWeight[weight],\n    color: vars$1.foregroundColor.neutral,\n    ...responsiveStyle({\n      mobile: {\n        fontSize: vars$1.headingLevel[level].mobile.fontSize,\n        lineHeight: vars$1.headingLevel[level].mobile.lineHeight\n      },\n      tablet: {\n        fontSize: vars$1.headingLevel[level].tablet.fontSize,\n        lineHeight: vars$1.headingLevel[level].tablet.lineHeight\n      }\n    })\n  };\n};\nconst {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  // TODO: COLORMODE RELEASE\n  // Release new backgrounds\n  backgroundColor: {\n    surfaceDark: _,\n    bodyDark: __,\n    ...backgroundColor\n  },\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n} = vars$1;\nconst vars = {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  backgroundColor,\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n};\nfunction atoms(props) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\"background\" in props) {\n      throw new Error(\"'background' is not available via 'atoms'. This is because Braid uses React context to dynamically apply matching tones to child elements. Please use `<Box background=\\\"...\\\">` instead.\");\n    }\n  }\n  return atoms$1(props);\n}\nexport { atoms, breakpoints, colorModeStyle, globalHeadingStyle, globalTextStyle, responsiveStyle, vars };","map":{"version":3,"names":["vars","vars$1","atoms","atoms$1","colorModeStyle","responsiveStyle","breakpoints","globalTextStyle","weight","size","arguments","length","undefined","fontFamily","fontWeight","textWeight","color","foregroundColor","neutral","mobile","fontSize","textSize","lineHeight","tablet","globalHeadingStyle","_ref","level","headingWeight","headingLevel","grid","space","touchableSize","contentWidth","backgroundColor","surfaceDark","_","bodyDark","__","borderColor","borderRadius","borderWidth","shadow","props","process","env","NODE_ENV","Error"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/braid-design-system/dist/css.mjs"],"sourcesContent":["import { vars as vars$1 } from \"./styles/lib/themes/vars.css.mjs\";\nimport { atoms as atoms$1 } from \"./styles/lib/css/atoms/atoms.mjs\";\nimport { colorModeStyle } from \"./styles/lib/css/colorModeStyle.mjs\";\nimport { responsiveStyle } from \"./styles/lib/css/responsiveStyle.mjs\";\nimport { breakpoints } from \"./styles/lib/css/breakpoints.mjs\";\nconst globalTextStyle = ({\n  weight = \"regular\",\n  size = \"standard\"\n} = {}) => ({\n  fontFamily: vars$1.fontFamily,\n  fontWeight: vars$1.textWeight[weight],\n  color: vars$1.foregroundColor.neutral,\n  ...responsiveStyle({\n    mobile: {\n      fontSize: vars$1.textSize[size].mobile.fontSize,\n      lineHeight: vars$1.textSize[size].mobile.lineHeight\n    },\n    tablet: {\n      fontSize: vars$1.textSize[size].tablet.fontSize,\n      lineHeight: vars$1.textSize[size].tablet.lineHeight\n    }\n  })\n});\nconst globalHeadingStyle = ({\n  weight = \"regular\",\n  level\n}) => ({\n  fontFamily: vars$1.fontFamily,\n  fontWeight: vars$1.headingWeight[weight],\n  color: vars$1.foregroundColor.neutral,\n  ...responsiveStyle({\n    mobile: {\n      fontSize: vars$1.headingLevel[level].mobile.fontSize,\n      lineHeight: vars$1.headingLevel[level].mobile.lineHeight\n    },\n    tablet: {\n      fontSize: vars$1.headingLevel[level].tablet.fontSize,\n      lineHeight: vars$1.headingLevel[level].tablet.lineHeight\n    }\n  })\n});\nconst {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  // TODO: COLORMODE RELEASE\n  // Release new backgrounds\n  backgroundColor: { surfaceDark: _, bodyDark: __, ...backgroundColor },\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n} = vars$1;\nconst vars = {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  backgroundColor,\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n};\nfunction atoms(props) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\"background\" in props) {\n      throw new Error(\n        `'background' is not available via 'atoms'. This is because Braid uses React context to dynamically apply matching tones to child elements. Please use \\`<Box background=\"...\">\\` instead.`\n      );\n    }\n  }\n  return atoms$1(props);\n}\nexport {\n  atoms,\n  breakpoints,\n  colorModeStyle,\n  globalHeadingStyle,\n  globalTextStyle,\n  responsiveStyle,\n  vars\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}