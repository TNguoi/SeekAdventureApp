{"ast":null,"code":"\"use strict\";\n\nfunction dedent(strings) {\n  var raw = void 0;\n  if (typeof strings === \"string\") {\n    // dedent can be used as a plain function\n    raw = [strings];\n  } else {\n    raw = strings.raw;\n  }\n\n  // first, perform interpolation\n  var result = \"\";\n  for (var i = 0; i < raw.length; i++) {\n    result += raw[i].\n    // join lines when there is a suppressed newline\n    replace(/\\\\\\n[ \\t]*/g, \"\").\n    // handle escaped backticks\n    replace(/\\\\`/g, \"`\");\n    if (i < (arguments.length <= 1 ? 0 : arguments.length - 1)) {\n      result += arguments.length <= i + 1 ? undefined : arguments[i + 1];\n    }\n  }\n\n  // now strip indentation\n  var lines = result.split(\"\\n\");\n  var mindent = null;\n  lines.forEach(function (l) {\n    var m = l.match(/^(\\s+)\\S+/);\n    if (m) {\n      var indent = m[1].length;\n      if (!mindent) {\n        // this is the first indented line\n        mindent = indent;\n      } else {\n        mindent = Math.min(mindent, indent);\n      }\n    }\n  });\n  if (mindent !== null) {\n    result = lines.map(function (l) {\n      return l[0] === \" \" ? l.slice(mindent) : l;\n    }).join(\"\\n\");\n  }\n\n  // dedent eats leading and trailing whitespace too\n  result = result.trim();\n\n  // handle escaped newlines at the end to ensure they don't get stripped too\n  return result.replace(/\\\\n/g, \"\\n\");\n}\nif (typeof module !== \"undefined\") {\n  module.exports = dedent;\n}","map":{"version":3,"names":["dedent","strings","raw","result","i","length","replace","arguments","undefined","lines","split","mindent","forEach","l","m","match","indent","Math","min","map","slice","join","trim","module","exports"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/dedent/dist/dedent.js"],"sourcesContent":["\"use strict\";\n\nfunction dedent(strings) {\n\n  var raw = void 0;\n  if (typeof strings === \"string\") {\n    // dedent can be used as a plain function\n    raw = [strings];\n  } else {\n    raw = strings.raw;\n  }\n\n  // first, perform interpolation\n  var result = \"\";\n  for (var i = 0; i < raw.length; i++) {\n    result += raw[i].\n    // join lines when there is a suppressed newline\n    replace(/\\\\\\n[ \\t]*/g, \"\").\n\n    // handle escaped backticks\n    replace(/\\\\`/g, \"`\");\n\n    if (i < (arguments.length <= 1 ? 0 : arguments.length - 1)) {\n      result += arguments.length <= i + 1 ? undefined : arguments[i + 1];\n    }\n  }\n\n  // now strip indentation\n  var lines = result.split(\"\\n\");\n  var mindent = null;\n  lines.forEach(function (l) {\n    var m = l.match(/^(\\s+)\\S+/);\n    if (m) {\n      var indent = m[1].length;\n      if (!mindent) {\n        // this is the first indented line\n        mindent = indent;\n      } else {\n        mindent = Math.min(mindent, indent);\n      }\n    }\n  });\n\n  if (mindent !== null) {\n    result = lines.map(function (l) {\n      return l[0] === \" \" ? l.slice(mindent) : l;\n    }).join(\"\\n\");\n  }\n\n  // dedent eats leading and trailing whitespace too\n  result = result.trim();\n\n  // handle escaped newlines at the end to ensure they don't get stripped too\n  return result.replace(/\\\\n/g, \"\\n\");\n}\n\nif (typeof module !== \"undefined\") {\n  module.exports = dedent;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,MAAMA,CAACC,OAAO,EAAE;EAEvB,IAAIC,GAAG,GAAG,KAAK,CAAC;EAChB,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;IAC/B;IACAC,GAAG,GAAG,CAACD,OAAO,CAAC;EACjB,CAAC,MAAM;IACLC,GAAG,GAAGD,OAAO,CAACC,GAAG;EACnB;;EAEA;EACA,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACnCD,MAAM,IAAID,GAAG,CAACE,CAAC,CAAC;IAChB;IACAE,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;IAE1B;IACAA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IAEpB,IAAIF,CAAC,IAAIG,SAAS,CAACF,MAAM,IAAI,CAAC,GAAG,CAAC,GAAGE,SAAS,CAACF,MAAM,GAAG,CAAC,CAAC,EAAE;MAC1DF,MAAM,IAAII,SAAS,CAACF,MAAM,IAAID,CAAC,GAAG,CAAC,GAAGI,SAAS,GAAGD,SAAS,CAACH,CAAC,GAAG,CAAC,CAAC;IACpE;EACF;;EAEA;EACA,IAAIK,KAAK,GAAGN,MAAM,CAACO,KAAK,CAAC,IAAI,CAAC;EAC9B,IAAIC,OAAO,GAAG,IAAI;EAClBF,KAAK,CAACG,OAAO,CAAC,UAAUC,CAAC,EAAE;IACzB,IAAIC,CAAC,GAAGD,CAAC,CAACE,KAAK,CAAC,WAAW,CAAC;IAC5B,IAAID,CAAC,EAAE;MACL,IAAIE,MAAM,GAAGF,CAAC,CAAC,CAAC,CAAC,CAACT,MAAM;MACxB,IAAI,CAACM,OAAO,EAAE;QACZ;QACAA,OAAO,GAAGK,MAAM;MAClB,CAAC,MAAM;QACLL,OAAO,GAAGM,IAAI,CAACC,GAAG,CAACP,OAAO,EAAEK,MAAM,CAAC;MACrC;IACF;EACF,CAAC,CAAC;EAEF,IAAIL,OAAO,KAAK,IAAI,EAAE;IACpBR,MAAM,GAAGM,KAAK,CAACU,GAAG,CAAC,UAAUN,CAAC,EAAE;MAC9B,OAAOA,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,CAAC,CAACO,KAAK,CAACT,OAAO,CAAC,GAAGE,CAAC;IAC5C,CAAC,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC;EACf;;EAEA;EACAlB,MAAM,GAAGA,MAAM,CAACmB,IAAI,CAAC,CAAC;;EAEtB;EACA,OAAOnB,MAAM,CAACG,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;AACrC;AAEA,IAAI,OAAOiB,MAAM,KAAK,WAAW,EAAE;EACjCA,MAAM,CAACC,OAAO,GAAGxB,MAAM;AACzB"},"metadata":{},"sourceType":"script","externalDependencies":[]}