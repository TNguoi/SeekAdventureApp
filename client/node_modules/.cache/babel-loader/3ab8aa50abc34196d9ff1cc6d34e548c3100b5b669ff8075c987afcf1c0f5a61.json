{"ast":null,"code":"class AhoCorasick {\n  constructor(keywords) {\n    const {\n      failure,\n      gotoFn,\n      output\n    } = this._buildTables(keywords);\n    this.gotoFn = gotoFn;\n    this.output = output;\n    this.failure = failure;\n  }\n  _buildTables(keywords) {\n    const gotoFn = {\n      0: {}\n    };\n    const output = {};\n    let state = 0;\n    for (const word of keywords) {\n      let curr = 0;\n      for (const l of word) {\n        if (gotoFn[curr] && l in gotoFn[curr]) {\n          curr = gotoFn[curr][l];\n        } else {\n          state++;\n          gotoFn[curr][l] = state;\n          gotoFn[state] = {};\n          curr = state;\n          output[state] = [];\n        }\n      }\n      output[curr].push(word);\n    }\n    const failure = {};\n    const xs = [];\n    // f(s) = 0 for all states of depth 1 (the ones from which the 0 state can transition to)\n    for (const l in gotoFn[0]) {\n      const state = gotoFn[0][l];\n      failure[state] = 0;\n      xs.push(state);\n    }\n    while (xs.length > 0) {\n      const r = xs.shift();\n      if (r !== undefined) {\n        for (const l in gotoFn[r]) {\n          const s = gotoFn[r][l];\n          xs.push(s);\n          // set state = f(r)\n          let state = failure[r];\n          while (state > 0 && !(l in gotoFn[state])) {\n            state = failure[state];\n          }\n          if (l in gotoFn[state]) {\n            const fs = gotoFn[state][l];\n            failure[s] = fs;\n            output[s] = [...output[s], ...output[fs]];\n          } else {\n            failure[s] = 0;\n          }\n        }\n      }\n      // for each symbol a such that g(r, a) = s\n    }\n\n    return {\n      gotoFn,\n      output,\n      failure\n    };\n  }\n  search(str) {\n    let state = 0;\n    const results = [];\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < str.length; i++) {\n      const l = str[i];\n      while (state > 0 && !(l in this.gotoFn[state])) {\n        state = this.failure[state];\n      }\n      // 使用 object ，表情符号出现问题\n      if (!(l in this.gotoFn[state])) {\n        continue;\n      }\n      state = this.gotoFn[state][l];\n      if (this.output[state].length > 0) {\n        const foundStrs = this.output[state];\n        results.push([i, foundStrs]);\n      }\n    }\n    return results;\n  }\n}\nexport { AhoCorasick as default };","map":{"version":3,"names":["AhoCorasick","constructor","keywords","failure","gotoFn","output","_buildTables","state","word","curr","l","push","xs","length","r","shift","undefined","s","fs","search","str","results","i","foundStrs","default"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/modern-ahocorasick/dist/index.mjs"],"sourcesContent":["class AhoCorasick {\n    constructor(keywords) {\n        const { failure, gotoFn, output } = this._buildTables(keywords);\n        this.gotoFn = gotoFn;\n        this.output = output;\n        this.failure = failure;\n    }\n    _buildTables(keywords) {\n        const gotoFn = {\n            0: {}\n        };\n        const output = {};\n        let state = 0;\n        for (const word of keywords) {\n            let curr = 0;\n            for (const l of word) {\n                if (gotoFn[curr] && l in gotoFn[curr]) {\n                    curr = gotoFn[curr][l];\n                }\n                else {\n                    state++;\n                    gotoFn[curr][l] = state;\n                    gotoFn[state] = {};\n                    curr = state;\n                    output[state] = [];\n                }\n            }\n            output[curr].push(word);\n        }\n        const failure = {};\n        const xs = [];\n        // f(s) = 0 for all states of depth 1 (the ones from which the 0 state can transition to)\n        for (const l in gotoFn[0]) {\n            const state = gotoFn[0][l];\n            failure[state] = 0;\n            xs.push(state);\n        }\n        while (xs.length > 0) {\n            const r = xs.shift();\n            if (r !== undefined) {\n                for (const l in gotoFn[r]) {\n                    const s = gotoFn[r][l];\n                    xs.push(s);\n                    // set state = f(r)\n                    let state = failure[r];\n                    while (state > 0 && !(l in gotoFn[state])) {\n                        state = failure[state];\n                    }\n                    if (l in gotoFn[state]) {\n                        const fs = gotoFn[state][l];\n                        failure[s] = fs;\n                        output[s] = [...output[s], ...output[fs]];\n                    }\n                    else {\n                        failure[s] = 0;\n                    }\n                }\n            }\n            // for each symbol a such that g(r, a) = s\n        }\n        return {\n            gotoFn,\n            output,\n            failure\n        };\n    }\n    search(str) {\n        let state = 0;\n        const results = [];\n        // eslint-disable-next-line unicorn/no-for-loop\n        for (let i = 0; i < str.length; i++) {\n            const l = str[i];\n            while (state > 0 && !(l in this.gotoFn[state])) {\n                state = this.failure[state];\n            }\n            // 使用 object ，表情符号出现问题\n            if (!(l in this.gotoFn[state])) {\n                continue;\n            }\n            state = this.gotoFn[state][l];\n            if (this.output[state].length > 0) {\n                const foundStrs = this.output[state];\n                results.push([i, foundStrs]);\n            }\n        }\n        return results;\n    }\n}\n\nexport { AhoCorasick as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}