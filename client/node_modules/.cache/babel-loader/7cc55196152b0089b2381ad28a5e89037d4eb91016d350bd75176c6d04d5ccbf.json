{"ast":null,"code":"import { setFileScope, endFileScope } from \"@vanilla-extract/css/fileScope\";\nimport { createThemeContract, assignVars, style, styleVariants } from \"@vanilla-extract/css\";\nimport { darkMode } from \"../../css/atoms/sprinkles.css.mjs\";\nimport { vars } from \"../../themes/vars.css.mjs\";\nsetFileScope(\"src/lib/components/TextLink/TextLink.css.ts?used\", \"braid-design-system\");\nconst textLinkVars = createThemeContract({\n  color: null,\n  colorHover: null\n});\nconst lightModeRegularLinkVars = assignVars(textLinkVars, {\n  color: vars.foregroundColor.link,\n  colorHover: vars.foregroundColor.linkHover\n});\nconst darkModeRegularLinkVars = assignVars(textLinkVars, {\n  color: vars.foregroundColor.linkLight,\n  colorHover: vars.foregroundColor.linkLight\n});\nconst weakLinkVars = assignVars(textLinkVars, {\n  color: \"inherit\",\n  colorHover: \"inherit\"\n});\nconst textDecorationThickness = \"0.08em\";\nconst base = style({\n  color: textLinkVars.color,\n  textDecoration: vars.linkDecoration,\n  textDecorationThickness,\n  textUnderlineOffset: 3,\n  \":hover\": {\n    color: textLinkVars.colorHover,\n    textDecoration: \"underline\",\n    /*\n          Duplicating the thickness property due to inconsistent support\n          for shorthand properties of `text-decoration`. Without this,\n          applying the above decoration rule resets the thickness in\n          browsers that do support shorthands.\n    \n          We also cannot use the long-form `text-decoration-line` due\n          to browser support policy of Edge 16+.\n        */\n    textDecorationThickness\n  },\n  \":focus-visible\": {\n    color: textLinkVars.colorHover,\n    outline: `${vars.focusRingSize} solid ${vars.borderColor.focus}`,\n    outlineOffset: \"0.2em\",\n    borderRadius: vars.borderRadius.small\n  }\n}, \"base\");\nconst weakLink = style({\n  vars: weakLinkVars,\n  textDecoration: \"underline\",\n  /*\n    Duplicating the thickness property again as the `textDecoration`\n    property above overrides the `textDecorationThickness` property\n    in the `base` style due to CSS rule ordering. Without this property,\n    weak links were receiving `auto` thickness instead of the desired\n    value.\n  */\n  textDecorationThickness\n}, \"weakLink\");\nconst regularLinkLightMode = styleVariants({\n  light: {\n    selectors: {\n      [`html:not(${darkMode}) &`]: {\n        vars: lightModeRegularLinkVars\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html:not(${darkMode}) &`]: {\n        vars: darkModeRegularLinkVars\n      }\n    }\n  }\n}, \"regularLinkLightMode\");\nconst regularLinkDarkMode = styleVariants({\n  light: {\n    selectors: {\n      [`html${darkMode} &`]: {\n        vars: lightModeRegularLinkVars\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html${darkMode} &`]: {\n        vars: darkModeRegularLinkVars\n      }\n    }\n  }\n}, \"regularLinkDarkMode\");\nconst visitedLightMode = styleVariants({\n  light: {\n    selectors: {\n      [`html:not(${darkMode}) &:visited`]: {\n        color: vars.foregroundColor.linkVisited\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html:not(${darkMode}) &:visited`]: {\n        color: vars.foregroundColor.linkLightVisited\n      }\n    }\n  }\n}, \"visitedLightMode\");\nconst visitedDarkMode = styleVariants({\n  light: {\n    selectors: {\n      [`html${darkMode} &:visited`]: {\n        color: vars.foregroundColor.linkVisited\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html${darkMode} &:visited`]: {\n        color: vars.foregroundColor.linkLightVisited\n      }\n    }\n  }\n}, \"visitedDarkMode\");\nendFileScope();\nexport { base, regularLinkDarkMode, regularLinkLightMode, visitedDarkMode, visitedLightMode, weakLink };","map":{"version":3,"names":["setFileScope","endFileScope","createThemeContract","assignVars","style","styleVariants","darkMode","vars","textLinkVars","color","colorHover","lightModeRegularLinkVars","foregroundColor","link","linkHover","darkModeRegularLinkVars","linkLight","weakLinkVars","textDecorationThickness","base","textDecoration","linkDecoration","textUnderlineOffset","outline","focusRingSize","borderColor","focus","outlineOffset","borderRadius","small","weakLink","regularLinkLightMode","light","selectors","dark","regularLinkDarkMode","visitedLightMode","linkVisited","linkLightVisited","visitedDarkMode"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/braid-design-system/dist/styles/lib/components/TextLink/TextLink.css.mjs"],"sourcesContent":["import { setFileScope, endFileScope } from \"@vanilla-extract/css/fileScope\";\nimport { createThemeContract, assignVars, style, styleVariants } from \"@vanilla-extract/css\";\nimport { darkMode } from \"../../css/atoms/sprinkles.css.mjs\";\nimport { vars } from \"../../themes/vars.css.mjs\";\nsetFileScope(\"src/lib/components/TextLink/TextLink.css.ts?used\", \"braid-design-system\");\nconst textLinkVars = createThemeContract({\n  color: null,\n  colorHover: null\n});\nconst lightModeRegularLinkVars = assignVars(textLinkVars, {\n  color: vars.foregroundColor.link,\n  colorHover: vars.foregroundColor.linkHover\n});\nconst darkModeRegularLinkVars = assignVars(textLinkVars, {\n  color: vars.foregroundColor.linkLight,\n  colorHover: vars.foregroundColor.linkLight\n});\nconst weakLinkVars = assignVars(textLinkVars, {\n  color: \"inherit\",\n  colorHover: \"inherit\"\n});\nconst textDecorationThickness = \"0.08em\";\nconst base = style({\n  color: textLinkVars.color,\n  textDecoration: vars.linkDecoration,\n  textDecorationThickness,\n  textUnderlineOffset: 3,\n  \":hover\": {\n    color: textLinkVars.colorHover,\n    textDecoration: \"underline\",\n    /*\n          Duplicating the thickness property due to inconsistent support\n          for shorthand properties of `text-decoration`. Without this,\n          applying the above decoration rule resets the thickness in\n          browsers that do support shorthands.\n    \n          We also cannot use the long-form `text-decoration-line` due\n          to browser support policy of Edge 16+.\n        */\n    textDecorationThickness\n  },\n  \":focus-visible\": {\n    color: textLinkVars.colorHover,\n    outline: `${vars.focusRingSize} solid ${vars.borderColor.focus}`,\n    outlineOffset: \"0.2em\",\n    borderRadius: vars.borderRadius.small\n  }\n}, \"base\");\nconst weakLink = style({\n  vars: weakLinkVars,\n  textDecoration: \"underline\",\n  /*\n    Duplicating the thickness property again as the `textDecoration`\n    property above overrides the `textDecorationThickness` property\n    in the `base` style due to CSS rule ordering. Without this property,\n    weak links were receiving `auto` thickness instead of the desired\n    value.\n  */\n  textDecorationThickness\n}, \"weakLink\");\nconst regularLinkLightMode = styleVariants({\n  light: {\n    selectors: {\n      [`html:not(${darkMode}) &`]: {\n        vars: lightModeRegularLinkVars\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html:not(${darkMode}) &`]: {\n        vars: darkModeRegularLinkVars\n      }\n    }\n  }\n}, \"regularLinkLightMode\");\nconst regularLinkDarkMode = styleVariants({\n  light: {\n    selectors: {\n      [`html${darkMode} &`]: {\n        vars: lightModeRegularLinkVars\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html${darkMode} &`]: {\n        vars: darkModeRegularLinkVars\n      }\n    }\n  }\n}, \"regularLinkDarkMode\");\nconst visitedLightMode = styleVariants({\n  light: {\n    selectors: {\n      [`html:not(${darkMode}) &:visited`]: {\n        color: vars.foregroundColor.linkVisited\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html:not(${darkMode}) &:visited`]: {\n        color: vars.foregroundColor.linkLightVisited\n      }\n    }\n  }\n}, \"visitedLightMode\");\nconst visitedDarkMode = styleVariants({\n  light: {\n    selectors: {\n      [`html${darkMode} &:visited`]: {\n        color: vars.foregroundColor.linkVisited\n      }\n    }\n  },\n  dark: {\n    selectors: {\n      [`html${darkMode} &:visited`]: {\n        color: vars.foregroundColor.linkLightVisited\n      }\n    }\n  }\n}, \"visitedDarkMode\");\nendFileScope();\nexport {\n  base,\n  regularLinkDarkMode,\n  regularLinkLightMode,\n  visitedDarkMode,\n  visitedLightMode,\n  weakLink\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}