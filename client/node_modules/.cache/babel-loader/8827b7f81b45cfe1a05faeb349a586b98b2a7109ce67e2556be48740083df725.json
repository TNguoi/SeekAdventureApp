{"ast":null,"code":"import { vars as vars$1 } from \"./styles/lib/themes/vars.css.mjs\";\nimport { atoms as atoms$1 } from \"./styles/lib/css/atoms/atoms.mjs\";\nimport { colorModeStyle } from \"./styles/lib/css/colorModeStyle.mjs\";\nimport { responsiveStyle } from \"./styles/lib/css/responsiveStyle.mjs\";\nimport { breakpoints } from \"./styles/lib/css/breakpoints.mjs\";\nconst globalTextStyle = ({\n  weight = \"regular\",\n  size = \"standard\"\n} = {}) => ({\n  fontFamily: vars$1.fontFamily,\n  fontWeight: vars$1.textWeight[weight],\n  color: vars$1.foregroundColor.neutral,\n  ...responsiveStyle({\n    mobile: {\n      fontSize: vars$1.textSize[size].mobile.fontSize,\n      lineHeight: vars$1.textSize[size].mobile.lineHeight\n    },\n    tablet: {\n      fontSize: vars$1.textSize[size].tablet.fontSize,\n      lineHeight: vars$1.textSize[size].tablet.lineHeight\n    }\n  })\n});\nconst globalHeadingStyle = ({\n  weight = \"regular\",\n  level\n}) => ({\n  fontFamily: vars$1.fontFamily,\n  fontWeight: vars$1.headingWeight[weight],\n  color: vars$1.foregroundColor.neutral,\n  ...responsiveStyle({\n    mobile: {\n      fontSize: vars$1.headingLevel[level].mobile.fontSize,\n      lineHeight: vars$1.headingLevel[level].mobile.lineHeight\n    },\n    tablet: {\n      fontSize: vars$1.headingLevel[level].tablet.fontSize,\n      lineHeight: vars$1.headingLevel[level].tablet.lineHeight\n    }\n  })\n});\nconst {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  // TODO: COLORMODE RELEASE\n  // Release new backgrounds\n  backgroundColor: {\n    surfaceDark: _,\n    bodyDark: __,\n    ...backgroundColor\n  },\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n} = vars$1;\nconst vars = {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  backgroundColor,\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n};\nfunction atoms(props) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\"background\" in props) {\n      throw new Error(`'background' is not available via 'atoms'. This is because Braid uses React context to dynamically apply matching tones to child elements. Please use \\`<Box background=\"...\">\\` instead.`);\n    }\n  }\n  return atoms$1(props);\n}\nexport { atoms, breakpoints, colorModeStyle, globalHeadingStyle, globalTextStyle, responsiveStyle, vars };","map":{"version":3,"names":["vars","vars$1","atoms","atoms$1","colorModeStyle","responsiveStyle","breakpoints","globalTextStyle","weight","size","fontFamily","fontWeight","textWeight","color","foregroundColor","neutral","mobile","fontSize","textSize","lineHeight","tablet","globalHeadingStyle","level","headingWeight","headingLevel","grid","space","touchableSize","contentWidth","backgroundColor","surfaceDark","_","bodyDark","__","borderColor","borderRadius","borderWidth","shadow","props","process","env","NODE_ENV","Error"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/braid-design-system/dist/css.mjs"],"sourcesContent":["import { vars as vars$1 } from \"./styles/lib/themes/vars.css.mjs\";\nimport { atoms as atoms$1 } from \"./styles/lib/css/atoms/atoms.mjs\";\nimport { colorModeStyle } from \"./styles/lib/css/colorModeStyle.mjs\";\nimport { responsiveStyle } from \"./styles/lib/css/responsiveStyle.mjs\";\nimport { breakpoints } from \"./styles/lib/css/breakpoints.mjs\";\nconst globalTextStyle = ({\n  weight = \"regular\",\n  size = \"standard\"\n} = {}) => ({\n  fontFamily: vars$1.fontFamily,\n  fontWeight: vars$1.textWeight[weight],\n  color: vars$1.foregroundColor.neutral,\n  ...responsiveStyle({\n    mobile: {\n      fontSize: vars$1.textSize[size].mobile.fontSize,\n      lineHeight: vars$1.textSize[size].mobile.lineHeight\n    },\n    tablet: {\n      fontSize: vars$1.textSize[size].tablet.fontSize,\n      lineHeight: vars$1.textSize[size].tablet.lineHeight\n    }\n  })\n});\nconst globalHeadingStyle = ({\n  weight = \"regular\",\n  level\n}) => ({\n  fontFamily: vars$1.fontFamily,\n  fontWeight: vars$1.headingWeight[weight],\n  color: vars$1.foregroundColor.neutral,\n  ...responsiveStyle({\n    mobile: {\n      fontSize: vars$1.headingLevel[level].mobile.fontSize,\n      lineHeight: vars$1.headingLevel[level].mobile.lineHeight\n    },\n    tablet: {\n      fontSize: vars$1.headingLevel[level].tablet.fontSize,\n      lineHeight: vars$1.headingLevel[level].tablet.lineHeight\n    }\n  })\n});\nconst {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  // TODO: COLORMODE RELEASE\n  // Release new backgrounds\n  backgroundColor: { surfaceDark: _, bodyDark: __, ...backgroundColor },\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n} = vars$1;\nconst vars = {\n  grid,\n  space,\n  touchableSize,\n  contentWidth,\n  backgroundColor,\n  foregroundColor,\n  textWeight,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  shadow\n};\nfunction atoms(props) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\"background\" in props) {\n      throw new Error(\n        `'background' is not available via 'atoms'. This is because Braid uses React context to dynamically apply matching tones to child elements. Please use \\`<Box background=\"...\">\\` instead.`\n      );\n    }\n  }\n  return atoms$1(props);\n}\nexport {\n  atoms,\n  breakpoints,\n  colorModeStyle,\n  globalHeadingStyle,\n  globalTextStyle,\n  responsiveStyle,\n  vars\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}