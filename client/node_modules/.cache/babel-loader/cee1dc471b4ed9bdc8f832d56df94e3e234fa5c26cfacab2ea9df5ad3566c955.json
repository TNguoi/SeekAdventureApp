{"ast":null,"code":"import { setFileScope, endFileScope } from \"@vanilla-extract/css/fileScope\";\nimport { createVar, styleVariants, style } from \"@vanilla-extract/css\";\nimport { calc } from \"@vanilla-extract/css-utils\";\nimport { vars } from \"../../../themes/vars.css.mjs\";\nimport { hitArea } from \"../touchable/hitArea.mjs\";\nimport { debugTouchable } from \"../touchable/debugTouchable.mjs\";\nimport { responsiveStyle } from \"../../../css/responsiveStyle.mjs\";\nimport { colorModeStyle } from \"../../../css/colorModeStyle.mjs\";\nsetFileScope(\"src/lib/components/private/InlineField/InlineField.css.ts?used\", \"braid-design-system\");\nconst sizes = {\n  standard: \"standard\",\n  small: \"small\"\n};\nconst fieldSize = createVar(\"fieldSize\");\nconst labelCapHeight = createVar(\"labelCapHeight\");\nconst sizeVars = styleVariants(sizes, size => responsiveStyle({\n  mobile: {\n    vars: {\n      [fieldSize]: vars.inlineFieldSize[size],\n      [labelCapHeight]: vars.textSize[size].mobile.capHeight\n    }\n  },\n  tablet: {\n    vars: {\n      [labelCapHeight]: vars.textSize[size].tablet.capHeight\n    }\n  }\n}), \"sizeVars\");\nconst hitAreaOffset = calc(hitArea).subtract(fieldSize).divide(2).negate().toString();\nconst realField = style([{\n  width: hitArea,\n  height: hitArea,\n  top: hitAreaOffset,\n  left: hitAreaOffset\n}, debugTouchable()], \"realField\");\nconst fakeField = style({\n  height: fieldSize,\n  width: fieldSize,\n  selectors: {\n    // Overrides `surface` background of checked checkbox\n    // to make `formAccent` edge crisp on dark background\n    [\"\".concat(realField, \"[type=\\\"checkbox\\\"]:checked ~ &\")]: {\n      background: \"transparent\"\n    }\n  }\n}, \"fakeField\");\nconst labelOffset = style({\n  paddingTop: calc(fieldSize).subtract(labelCapHeight).divide(2).toString()\n}, \"labelOffset\");\nconst isMixed = style({}, \"isMixed\");\nconst children = style({\n  selectors: {\n    [\"\".concat(realField, \":checked ~ * &,\\n      \").concat(realField).concat(isMixed, \" ~ * &\")]: {\n      display: \"block\",\n      zIndex: 1\n    }\n  }\n}, \"children\");\nconst selected = style({\n  selectors: {\n    [\"\".concat(realField, \":checked + \").concat(fakeField, \" > &,\\n      \").concat(realField).concat(isMixed, \" + \").concat(fakeField, \" > &\")]: {\n      opacity: 1\n    }\n  }\n}, \"selected\");\nconst hideBorderOnDarkBackgroundInLightMode = style(colorModeStyle({\n  lightMode: {\n    opacity: 0\n  }\n}), \"hideBorderOnDarkBackgroundInLightMode\");\nconst focusOverlay = style({\n  selectors: {\n    [\"\".concat(realField, \":focus + \").concat(fakeField, \" > &\")]: {\n      opacity: 1\n    }\n  }\n}, \"focusOverlay\");\nconst hoverOverlay = style({\n  selectors: {\n    [\"\".concat(realField, \":hover:not(:checked):not(\").concat(isMixed, \"):not(:disabled) + \").concat(fakeField, \" > &,\\n      \").concat(realField, \":focus:not(\").concat(isMixed, \") + \").concat(fakeField, \" > &\")]: {\n      opacity: 1\n    }\n  }\n}, \"hoverOverlay\");\nconst indicator = style({\n  selectors: {\n    [\"\".concat(hoverOverlay, \" > &\")]: {\n      opacity: 0.2\n    }\n  }\n}, \"indicator\");\nconst checkboxScale = style({\n  transform: \"scale(0.85)\",\n  selectors: {\n    [\"\".concat(realField, \":active + \").concat(fakeField, \" > * > &\")]: {\n      transform: \"scale(0.75)\"\n    }\n  }\n}, \"checkboxScale\");\nconst checkboxIndicator = [indicator, checkboxScale];\nconst radioScale = style({\n  transform: \"scale(0.6)\",\n  selectors: {\n    [\"\".concat(realField, \":active + \").concat(fakeField, \" > * > &\")]: {\n      transform: \"scale(0.5)\"\n    }\n  }\n}, \"radioScale\");\nconst radioIndicator = [indicator, radioScale];\nendFileScope();\nexport { checkboxIndicator, children, fakeField, focusOverlay, hideBorderOnDarkBackgroundInLightMode, hoverOverlay, isMixed, labelOffset, radioIndicator, realField, selected, sizeVars };","map":{"version":3,"names":["setFileScope","endFileScope","createVar","styleVariants","style","calc","vars","hitArea","debugTouchable","responsiveStyle","colorModeStyle","sizes","standard","small","fieldSize","labelCapHeight","sizeVars","size","mobile","inlineFieldSize","textSize","capHeight","tablet","hitAreaOffset","subtract","divide","negate","toString","realField","width","height","top","left","fakeField","selectors","concat","background","labelOffset","paddingTop","isMixed","children","display","zIndex","selected","opacity","hideBorderOnDarkBackgroundInLightMode","lightMode","focusOverlay","hoverOverlay","indicator","checkboxScale","transform","checkboxIndicator","radioScale","radioIndicator"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/braid-design-system/dist/styles/lib/components/private/InlineField/InlineField.css.mjs"],"sourcesContent":["import { setFileScope, endFileScope } from \"@vanilla-extract/css/fileScope\";\nimport { createVar, styleVariants, style } from \"@vanilla-extract/css\";\nimport { calc } from \"@vanilla-extract/css-utils\";\nimport { vars } from \"../../../themes/vars.css.mjs\";\nimport { hitArea } from \"../touchable/hitArea.mjs\";\nimport { debugTouchable } from \"../touchable/debugTouchable.mjs\";\nimport { responsiveStyle } from \"../../../css/responsiveStyle.mjs\";\nimport { colorModeStyle } from \"../../../css/colorModeStyle.mjs\";\nsetFileScope(\"src/lib/components/private/InlineField/InlineField.css.ts?used\", \"braid-design-system\");\nconst sizes = {\n  standard: \"standard\",\n  small: \"small\"\n};\nconst fieldSize = createVar(\"fieldSize\");\nconst labelCapHeight = createVar(\"labelCapHeight\");\nconst sizeVars = styleVariants(sizes, (size) => responsiveStyle({\n  mobile: {\n    vars: {\n      [fieldSize]: vars.inlineFieldSize[size],\n      [labelCapHeight]: vars.textSize[size].mobile.capHeight\n    }\n  },\n  tablet: {\n    vars: {\n      [labelCapHeight]: vars.textSize[size].tablet.capHeight\n    }\n  }\n}), \"sizeVars\");\nconst hitAreaOffset = calc(hitArea).subtract(fieldSize).divide(2).negate().toString();\nconst realField = style([{\n  width: hitArea,\n  height: hitArea,\n  top: hitAreaOffset,\n  left: hitAreaOffset\n}, debugTouchable()], \"realField\");\nconst fakeField = style({\n  height: fieldSize,\n  width: fieldSize,\n  selectors: {\n    // Overrides `surface` background of checked checkbox\n    // to make `formAccent` edge crisp on dark background\n    [`${realField}[type=\"checkbox\"]:checked ~ &`]: {\n      background: \"transparent\"\n    }\n  }\n}, \"fakeField\");\nconst labelOffset = style({\n  paddingTop: calc(fieldSize).subtract(labelCapHeight).divide(2).toString()\n}, \"labelOffset\");\nconst isMixed = style({}, \"isMixed\");\nconst children = style({\n  selectors: {\n    [`${realField}:checked ~ * &,\n      ${realField}${isMixed} ~ * &`]: {\n      display: \"block\",\n      zIndex: 1\n    }\n  }\n}, \"children\");\nconst selected = style({\n  selectors: {\n    [`${realField}:checked + ${fakeField} > &,\n      ${realField}${isMixed} + ${fakeField} > &`]: {\n      opacity: 1\n    }\n  }\n}, \"selected\");\nconst hideBorderOnDarkBackgroundInLightMode = style(colorModeStyle({\n  lightMode: {\n    opacity: 0\n  }\n}), \"hideBorderOnDarkBackgroundInLightMode\");\nconst focusOverlay = style({\n  selectors: {\n    [`${realField}:focus + ${fakeField} > &`]: {\n      opacity: 1\n    }\n  }\n}, \"focusOverlay\");\nconst hoverOverlay = style({\n  selectors: {\n    [`${realField}:hover:not(:checked):not(${isMixed}):not(:disabled) + ${fakeField} > &,\n      ${realField}:focus:not(${isMixed}) + ${fakeField} > &`]: {\n      opacity: 1\n    }\n  }\n}, \"hoverOverlay\");\nconst indicator = style({\n  selectors: {\n    [`${hoverOverlay} > &`]: {\n      opacity: 0.2\n    }\n  }\n}, \"indicator\");\nconst checkboxScale = style({\n  transform: \"scale(0.85)\",\n  selectors: {\n    [`${realField}:active + ${fakeField} > * > &`]: {\n      transform: \"scale(0.75)\"\n    }\n  }\n}, \"checkboxScale\");\nconst checkboxIndicator = [indicator, checkboxScale];\nconst radioScale = style({\n  transform: \"scale(0.6)\",\n  selectors: {\n    [`${realField}:active + ${fakeField} > * > &`]: {\n      transform: \"scale(0.5)\"\n    }\n  }\n}, \"radioScale\");\nconst radioIndicator = [indicator, radioScale];\nendFileScope();\nexport {\n  checkboxIndicator,\n  children,\n  fakeField,\n  focusOverlay,\n  hideBorderOnDarkBackgroundInLightMode,\n  hoverOverlay,\n  isMixed,\n  labelOffset,\n  radioIndicator,\n  realField,\n  selected,\n  sizeVars\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}