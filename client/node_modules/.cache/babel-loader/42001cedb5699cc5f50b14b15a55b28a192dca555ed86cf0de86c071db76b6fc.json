{"ast":null,"code":"import mapValues from \"lodash/mapValues.js\";\nimport { getCapHeight } from \"@capsizecss/core\";\nimport { precomputeValues } from \"@capsizecss/vanilla-extract\";\nconst px = v => \"\".concat(v, \"px\");\nconst fontSizeToCapHeight = (grid, definition, fontMetrics) => {\n  const {\n    mobile,\n    tablet\n  } = definition;\n  const mobileCapHeight = getCapHeight({\n    fontSize: mobile.fontSize,\n    fontMetrics\n  });\n  const tabletCapHeight = getCapHeight({\n    fontSize: tablet.fontSize,\n    fontMetrics\n  });\n  const mobileConfig = \"lineGap\" in mobile ? {\n    fontSize: mobile.fontSize,\n    lineGap: mobile.lineGap\n  } : {\n    fontSize: mobile.fontSize,\n    leading: mobile.rows * grid\n  };\n  const tabletConfig = \"lineGap\" in tablet ? {\n    fontSize: tablet.fontSize,\n    lineGap: tablet.lineGap\n  } : {\n    fontSize: tablet.fontSize,\n    leading: tablet.rows * grid\n  };\n  const {\n    fontSize: mobileFontSize,\n    lineHeight: mobileLineHeight,\n    ...mobileTrims\n  } = precomputeValues({\n    ...mobileConfig,\n    fontMetrics\n  });\n  const {\n    fontSize: tabletFontSize,\n    lineHeight: tabletLineHeight,\n    ...tabletTrims\n  } = precomputeValues({\n    ...tabletConfig,\n    fontMetrics\n  });\n  return {\n    mobile: {\n      fontSize: mobileFontSize,\n      lineHeight: mobileLineHeight,\n      capHeight: px(mobileCapHeight),\n      capsizeTrims: {\n        ...mobileTrims\n      }\n    },\n    tablet: {\n      fontSize: tabletFontSize,\n      lineHeight: tabletLineHeight,\n      capHeight: px(tabletCapHeight),\n      capsizeTrims: {\n        ...tabletTrims\n      }\n    }\n  };\n};\nconst makeVanillaTheme = braidTokens => {\n  const {\n    name,\n    displayName,\n    legacy,\n    ...tokens\n  } = braidTokens;\n  const {\n    webFont,\n    ...typography\n  } = tokens.typography;\n  const {\n    foreground,\n    background\n  } = tokens.color;\n  const textSize = mapValues(tokens.typography.text, definition => fontSizeToCapHeight(tokens.grid, definition, typography.fontMetrics));\n  const getInlineFieldSize = size => {\n    const scale = parseInt(textSize[size].mobile.lineHeight, 10) / 42;\n    return px(tokens.grid * Math.round(tokens.touchableSize * scale));\n  };\n  const resolvedTokens = {\n    space: mapValues(tokens.space, sp => px(sp * tokens.grid)),\n    touchableSize: px(tokens.touchableSize * tokens.grid),\n    grid: px(tokens.grid),\n    borderRadius: tokens.border.radius,\n    borderColor: tokens.border.color,\n    borderWidth: mapValues(tokens.border.width, px),\n    focusRingSize: px(tokens.focusRingSize),\n    contentWidth: mapValues(tokens.contentWidth, px),\n    foregroundColor: foreground,\n    backgroundColor: background,\n    fontFamily: typography.fontFamily,\n    fontMetrics: mapValues(typography.fontMetrics, String),\n    textSize,\n    textWeight: mapValues(typography.fontWeight, String),\n    headingLevel: mapValues(tokens.typography.heading.level, definition => fontSizeToCapHeight(tokens.grid, definition, typography.fontMetrics)),\n    headingWeight: {\n      weak: String(tokens.typography.fontWeight[tokens.typography.heading.weight.weak]),\n      regular: String(tokens.typography.fontWeight[tokens.typography.heading.weight.regular])\n    },\n    /*\n      Going forward, all links variants should be underlined as an accessibility\n      best practice. However, to maintain existing behaviour we are sunsetting\n      the old style based on the `legacy` theme flag, e.g. `apac`.\n    */\n    linkDecoration: legacy ? \"none\" : \"underline\",\n    inlineFieldSize: {\n      standard: getInlineFieldSize(\"standard\"),\n      small: getInlineFieldSize(\"small\")\n    },\n    transition: tokens.transitions,\n    transform: tokens.transforms,\n    shadow: tokens.shadows\n  };\n  return resolvedTokens;\n};\nexport { makeVanillaTheme };","map":{"version":3,"names":["mapValues","getCapHeight","precomputeValues","px","v","concat","fontSizeToCapHeight","grid","definition","fontMetrics","mobile","tablet","mobileCapHeight","fontSize","tabletCapHeight","mobileConfig","lineGap","leading","rows","tabletConfig","mobileFontSize","lineHeight","mobileLineHeight","mobileTrims","tabletFontSize","tabletLineHeight","tabletTrims","capHeight","capsizeTrims","makeVanillaTheme","braidTokens","name","displayName","legacy","tokens","webFont","typography","foreground","background","color","textSize","text","getInlineFieldSize","size","scale","parseInt","Math","round","touchableSize","resolvedTokens","space","sp","borderRadius","border","radius","borderColor","borderWidth","width","focusRingSize","contentWidth","foregroundColor","backgroundColor","fontFamily","String","textWeight","fontWeight","headingLevel","heading","level","headingWeight","weak","weight","regular","linkDecoration","inlineFieldSize","standard","small","transition","transitions","transform","transforms","shadow","shadows"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/braid-design-system/dist/styles/lib/themes/makeVanillaTheme.mjs"],"sourcesContent":["import mapValues from \"lodash/mapValues.js\";\nimport { getCapHeight } from \"@capsizecss/core\";\nimport { precomputeValues } from \"@capsizecss/vanilla-extract\";\nconst px = (v) => `${v}px`;\nconst fontSizeToCapHeight = (grid, definition, fontMetrics) => {\n  const { mobile, tablet } = definition;\n  const mobileCapHeight = getCapHeight({\n    fontSize: mobile.fontSize,\n    fontMetrics\n  });\n  const tabletCapHeight = getCapHeight({\n    fontSize: tablet.fontSize,\n    fontMetrics\n  });\n  const mobileConfig = \"lineGap\" in mobile ? {\n    fontSize: mobile.fontSize,\n    lineGap: mobile.lineGap\n  } : {\n    fontSize: mobile.fontSize,\n    leading: mobile.rows * grid\n  };\n  const tabletConfig = \"lineGap\" in tablet ? {\n    fontSize: tablet.fontSize,\n    lineGap: tablet.lineGap\n  } : {\n    fontSize: tablet.fontSize,\n    leading: tablet.rows * grid\n  };\n  const {\n    fontSize: mobileFontSize,\n    lineHeight: mobileLineHeight,\n    ...mobileTrims\n  } = precomputeValues({\n    ...mobileConfig,\n    fontMetrics\n  });\n  const {\n    fontSize: tabletFontSize,\n    lineHeight: tabletLineHeight,\n    ...tabletTrims\n  } = precomputeValues({\n    ...tabletConfig,\n    fontMetrics\n  });\n  return {\n    mobile: {\n      fontSize: mobileFontSize,\n      lineHeight: mobileLineHeight,\n      capHeight: px(mobileCapHeight),\n      capsizeTrims: {\n        ...mobileTrims\n      }\n    },\n    tablet: {\n      fontSize: tabletFontSize,\n      lineHeight: tabletLineHeight,\n      capHeight: px(tabletCapHeight),\n      capsizeTrims: {\n        ...tabletTrims\n      }\n    }\n  };\n};\nconst makeVanillaTheme = (braidTokens) => {\n  const { name, displayName, legacy, ...tokens } = braidTokens;\n  const { webFont, ...typography } = tokens.typography;\n  const { foreground, background } = tokens.color;\n  const textSize = mapValues(\n    tokens.typography.text,\n    (definition) => fontSizeToCapHeight(tokens.grid, definition, typography.fontMetrics)\n  );\n  const getInlineFieldSize = (size) => {\n    const scale = parseInt(textSize[size].mobile.lineHeight, 10) / 42;\n    return px(tokens.grid * Math.round(tokens.touchableSize * scale));\n  };\n  const resolvedTokens = {\n    space: mapValues(tokens.space, (sp) => px(sp * tokens.grid)),\n    touchableSize: px(tokens.touchableSize * tokens.grid),\n    grid: px(tokens.grid),\n    borderRadius: tokens.border.radius,\n    borderColor: tokens.border.color,\n    borderWidth: mapValues(tokens.border.width, px),\n    focusRingSize: px(tokens.focusRingSize),\n    contentWidth: mapValues(tokens.contentWidth, px),\n    foregroundColor: foreground,\n    backgroundColor: background,\n    fontFamily: typography.fontFamily,\n    fontMetrics: mapValues(typography.fontMetrics, String),\n    textSize,\n    textWeight: mapValues(typography.fontWeight, String),\n    headingLevel: mapValues(\n      tokens.typography.heading.level,\n      (definition) => fontSizeToCapHeight(tokens.grid, definition, typography.fontMetrics)\n    ),\n    headingWeight: {\n      weak: String(\n        tokens.typography.fontWeight[tokens.typography.heading.weight.weak]\n      ),\n      regular: String(\n        tokens.typography.fontWeight[tokens.typography.heading.weight.regular]\n      )\n    },\n    /*\n      Going forward, all links variants should be underlined as an accessibility\n      best practice. However, to maintain existing behaviour we are sunsetting\n      the old style based on the `legacy` theme flag, e.g. `apac`.\n    */\n    linkDecoration: legacy ? \"none\" : \"underline\",\n    inlineFieldSize: {\n      standard: getInlineFieldSize(\"standard\"),\n      small: getInlineFieldSize(\"small\")\n    },\n    transition: tokens.transitions,\n    transform: tokens.transforms,\n    shadow: tokens.shadows\n  };\n  return resolvedTokens;\n};\nexport {\n  makeVanillaTheme\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}