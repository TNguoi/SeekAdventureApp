{"ast":null,"code":"var _jsxFileName = \"/Users/tnguoi/Desktop/SeekAdventureApp/client/src/Game.jsx\";\nimport { Column, Stack, Card, Box, Columns, Inline, Placeholder, Tiles, Text } from 'braid-design-system';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Game extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Tiles, {\n      space: \"large\",\n      columns: {\n        mobile: 1,\n        desktop: 2\n      },\n      children: Object.entries({\n        body: 'Used for elements that need to match the body background.',\n        // TODO: COLORMODE RELEASE\n        // bodyDark:\n        //   'Used for elements that need to match the body background in dark context.',\n        brand: 'Used for branding larger areas of the screen.',\n        brandAccent: 'Used for hero elements on the screen.',\n        brandAccentHover: 'Hover colour for “brandAccent” elements.',\n        brandAccentActive: 'Active colour for “brandAccent” elements.',\n        brandAccentSoft: 'Used for soft “brandAccent” elements',\n        brandAccentSoftActive: 'Active colour for “brandAccentSoft” elements.',\n        brandAccentSoftHover: 'Hover colour for brandAccentSoft” elements.',\n        formAccent: 'Used for prominent interactive elements, typically within a form.',\n        formAccentHover: 'Hover colour for “formAccent” elements.',\n        formAccentActive: 'Active colour for “formAccent” elements.',\n        formAccentSoft: 'Used for soft “formAccent” elements',\n        formAccentSoftActive: 'Active colour for “formAccentSoft” elements.',\n        formAccentSoftHover: 'Hover colour for formAccentSoft” elements.',\n        positive: 'Used for heavier “positive” elements.',\n        positiveLight: 'Used for light “positive” elements.',\n        critical: 'Used for heavier “critical” elements.',\n        criticalHover: 'Hover colour for “critical” elements.',\n        criticalActive: 'Active colour for “critical” elements.',\n        criticalLight: 'Used for light “critical” elements.',\n        criticalSoft: 'Used for soft “critical” elements',\n        criticalSoftActive: 'Active colour for “criticalSoft” elements.',\n        criticalSoftHover: 'Hover colour for criticalSoft” elements.',\n        caution: 'Used for heavier “caution” elements.',\n        cautionLight: 'Used for light “caution” elements.',\n        info: 'Used for heavier “info” elements.',\n        infoLight: 'Used for light “info” elements.',\n        promote: 'Used for heavier “promote” elements.',\n        promoteLight: 'Used for light “promote” elements.',\n        neutral: 'Used for heavier “neutral” elements.',\n        neutralActive: 'Active colour for \"neutral\" elements',\n        neutralHover: 'Hover colour for \"neutral\" elements',\n        neutralLight: 'Used for light “neutral” elements.',\n        neutralSoft: 'Used for soft “neutral” elements',\n        neutralSoftActive: 'Active colour for \"neutralSoft\" elements',\n        neutralSoftHover: 'Hover colour for \"neutralSoft\" elements',\n        surface: 'Used for surfaces that sit on top of body elements'\n        // TODO: COLORMODE RELEASE\n        // surfaceDark:\n        //   'Used for surfaces that sit on top of body elements in a dark context',\n      }).map(([background]) => /*#__PURE__*/_jsxDEV(Columns, {\n        space: \"medium\",\n        alignY: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          width: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            background: \"surface\",\n            borderRadius: \"large\",\n            padding: \"gutter\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              background: {\n                background\n              },\n              borderRadius: \"large\",\n              padding: \"gutter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, background, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Column","Stack","Card","Box","Columns","Inline","Placeholder","Tiles","Text","Component","jsxDEV","_jsxDEV","Game","render","space","columns","mobile","desktop","children","Object","entries","body","brand","brandAccent","brandAccentHover","brandAccentActive","brandAccentSoft","brandAccentSoftActive","brandAccentSoftHover","formAccent","formAccentHover","formAccentActive","formAccentSoft","formAccentSoftActive","formAccentSoftHover","positive","positiveLight","critical","criticalHover","criticalActive","criticalLight","criticalSoft","criticalSoftActive","criticalSoftHover","caution","cautionLight","info","infoLight","promote","promoteLight","neutral","neutralActive","neutralHover","neutralLight","neutralSoft","neutralSoftActive","neutralSoftHover","surface","map","background","alignY","width","borderRadius","padding","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/src/Game.jsx"],"sourcesContent":["import {\n  Column,\n  Stack,\n  Card,\n  Box,\n  Columns,\n  Inline,\n  Placeholder,\n  Tiles,\n  Text,\n} from 'braid-design-system';\nimport { Component } from 'react';\n\nexport class Game extends Component {\n  render() {\n    return (\n      <Tiles space='large' columns={{ mobile: 1, desktop: 2 }}>\n        {Object.entries({\n          body: 'Used for elements that need to match the body background.',\n          // TODO: COLORMODE RELEASE\n          // bodyDark:\n          //   'Used for elements that need to match the body background in dark context.',\n          brand: 'Used for branding larger areas of the screen.',\n          brandAccent: 'Used for hero elements on the screen.',\n          brandAccentHover: 'Hover colour for “brandAccent” elements.',\n          brandAccentActive: 'Active colour for “brandAccent” elements.',\n          brandAccentSoft: 'Used for soft “brandAccent” elements',\n          brandAccentSoftActive:\n            'Active colour for “brandAccentSoft” elements.',\n          brandAccentSoftHover: 'Hover colour for brandAccentSoft” elements.',\n          formAccent:\n            'Used for prominent interactive elements, typically within a form.',\n          formAccentHover: 'Hover colour for “formAccent” elements.',\n          formAccentActive: 'Active colour for “formAccent” elements.',\n          formAccentSoft: 'Used for soft “formAccent” elements',\n          formAccentSoftActive: 'Active colour for “formAccentSoft” elements.',\n          formAccentSoftHover: 'Hover colour for formAccentSoft” elements.',\n          positive: 'Used for heavier “positive” elements.',\n          positiveLight: 'Used for light “positive” elements.',\n          critical: 'Used for heavier “critical” elements.',\n          criticalHover: 'Hover colour for “critical” elements.',\n          criticalActive: 'Active colour for “critical” elements.',\n          criticalLight: 'Used for light “critical” elements.',\n          criticalSoft: 'Used for soft “critical” elements',\n          criticalSoftActive: 'Active colour for “criticalSoft” elements.',\n          criticalSoftHover: 'Hover colour for criticalSoft” elements.',\n          caution: 'Used for heavier “caution” elements.',\n          cautionLight: 'Used for light “caution” elements.',\n          info: 'Used for heavier “info” elements.',\n          infoLight: 'Used for light “info” elements.',\n          promote: 'Used for heavier “promote” elements.',\n          promoteLight: 'Used for light “promote” elements.',\n          neutral: 'Used for heavier “neutral” elements.',\n          neutralActive: 'Active colour for \"neutral\" elements',\n          neutralHover: 'Hover colour for \"neutral\" elements',\n          neutralLight: 'Used for light “neutral” elements.',\n          neutralSoft: 'Used for soft “neutral” elements',\n          neutralSoftActive: 'Active colour for \"neutralSoft\" elements',\n          neutralSoftHover: 'Hover colour for \"neutralSoft\" elements',\n          surface: 'Used for surfaces that sit on top of body elements',\n          // TODO: COLORMODE RELEASE\n          // surfaceDark:\n          //   'Used for surfaces that sit on top of body elements in a dark context',\n        }).map(([background]) => (\n          <Columns key={background} space='medium' alignY='center'>\n            <Column width='content'>\n              <Box background='surface' borderRadius='large' padding='gutter'>\n                <Box\n                  background={{ background }}\n                  borderRadius='large'\n                  padding='gutter'\n                />\n              </Box>\n            </Column>\n          </Columns>\n        ))}\n      </Tiles>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}