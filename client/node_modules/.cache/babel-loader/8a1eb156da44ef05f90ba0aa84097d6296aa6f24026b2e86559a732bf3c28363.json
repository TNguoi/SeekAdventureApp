{"ast":null,"code":"// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = GradientParser || {};\nGradientParser.stringify = function () {\n  var visitor = {\n    'visit_linear-gradient': function (node) {\n      return visitor.visit_gradient(node);\n    },\n    'visit_repeating-linear-gradient': function (node) {\n      return visitor.visit_gradient(node);\n    },\n    'visit_radial-gradient': function (node) {\n      return visitor.visit_gradient(node);\n    },\n    'visit_repeating-radial-gradient': function (node) {\n      return visitor.visit_gradient(node);\n    },\n    'visit_gradient': function (node) {\n      var orientation = visitor.visit(node.orientation);\n      if (orientation) {\n        orientation += ', ';\n      }\n      return node.type + '(' + orientation + visitor.visit(node.colorStops) + ')';\n    },\n    'visit_shape': function (node) {\n      var result = node.value,\n        at = visitor.visit(node.at),\n        style = visitor.visit(node.style);\n      if (style) {\n        result += ' ' + style;\n      }\n      if (at) {\n        result += ' at ' + at;\n      }\n      return result;\n    },\n    'visit_default-radial': function (node) {\n      var result = '',\n        at = visitor.visit(node.at);\n      if (at) {\n        result += at;\n      }\n      return result;\n    },\n    'visit_extent-keyword': function (node) {\n      var result = node.value,\n        at = visitor.visit(node.at);\n      if (at) {\n        result += ' at ' + at;\n      }\n      return result;\n    },\n    'visit_position-keyword': function (node) {\n      return node.value;\n    },\n    'visit_position': function (node) {\n      return visitor.visit(node.value.x) + ' ' + visitor.visit(node.value.y);\n    },\n    'visit_%': function (node) {\n      return node.value + '%';\n    },\n    'visit_em': function (node) {\n      return node.value + 'em';\n    },\n    'visit_px': function (node) {\n      return node.value + 'px';\n    },\n    'visit_literal': function (node) {\n      return visitor.visit_color(node.value, node);\n    },\n    'visit_hex': function (node) {\n      return visitor.visit_color('#' + node.value, node);\n    },\n    'visit_rgb': function (node) {\n      return visitor.visit_color('rgb(' + node.value.join(', ') + ')', node);\n    },\n    'visit_rgba': function (node) {\n      return visitor.visit_color('rgba(' + node.value.join(', ') + ')', node);\n    },\n    'visit_color': function (resultColor, node) {\n      var result = resultColor,\n        length = visitor.visit(node.length);\n      if (length) {\n        result += ' ' + length;\n      }\n      return result;\n    },\n    'visit_angular': function (node) {\n      return node.value + 'deg';\n    },\n    'visit_directional': function (node) {\n      return 'to ' + node.value;\n    },\n    'visit_array': function (elements) {\n      var result = '',\n        size = elements.length;\n      elements.forEach(function (element, i) {\n        result += visitor.visit(element);\n        if (i < size - 1) {\n          result += ', ';\n        }\n      });\n      return result;\n    },\n    'visit': function (element) {\n      if (!element) {\n        return '';\n      }\n      var result = '';\n      if (element instanceof Array) {\n        return visitor.visit_array(element, result);\n      } else if (element.type) {\n        var nodeVisitor = visitor['visit_' + element.type];\n        if (nodeVisitor) {\n          return nodeVisitor(element);\n        } else {\n          throw Error('Missing visitor visit_' + element.type);\n        }\n      } else {\n        throw Error('Invalid node.');\n      }\n    }\n  };\n  return function (root) {\n    return visitor.visit(root);\n  };\n}();\n\n// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = GradientParser || {};\nGradientParser.parse = function () {\n  var tokens = {\n    linearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,\n    repeatingLinearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,\n    radialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,\n    repeatingRadialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,\n    sideOrCorner: /^to (left (top|bottom)|right (top|bottom)|left|right|top|bottom)/i,\n    extentKeywords: /^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,\n    positionKeywords: /^(left|center|right|top|bottom)/i,\n    pixelValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,\n    percentageValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,\n    emValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))em/,\n    angleValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,\n    startCall: /^\\(/,\n    endCall: /^\\)/,\n    comma: /^,/,\n    hexColor: /^\\#([0-9a-fA-F]+)/,\n    literalColor: /^([a-zA-Z]+)/,\n    rgbColor: /^rgb/i,\n    rgbaColor: /^rgba/i,\n    number: /^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/\n  };\n  var input = '';\n  function error(msg) {\n    var err = new Error(input + ': ' + msg);\n    err.source = input;\n    throw err;\n  }\n  function getAST() {\n    var ast = matchListDefinitions();\n    if (input.length > 0) {\n      error('Invalid input not EOF');\n    }\n    return ast;\n  }\n  function matchListDefinitions() {\n    return matchListing(matchDefinition);\n  }\n  function matchDefinition() {\n    return matchGradient('linear-gradient', tokens.linearGradient, matchLinearOrientation) || matchGradient('repeating-linear-gradient', tokens.repeatingLinearGradient, matchLinearOrientation) || matchGradient('radial-gradient', tokens.radialGradient, matchListRadialOrientations) || matchGradient('repeating-radial-gradient', tokens.repeatingRadialGradient, matchListRadialOrientations);\n  }\n  function matchGradient(gradientType, pattern, orientationMatcher) {\n    return matchCall(pattern, function (captures) {\n      var orientation = orientationMatcher();\n      if (orientation) {\n        if (!scan(tokens.comma)) {\n          error('Missing comma before color stops');\n        }\n      }\n      return {\n        type: gradientType,\n        orientation: orientation,\n        colorStops: matchListing(matchColorStop)\n      };\n    });\n  }\n  function matchCall(pattern, callback) {\n    var captures = scan(pattern);\n    if (captures) {\n      if (!scan(tokens.startCall)) {\n        error('Missing (');\n      }\n      var result = callback(captures);\n      if (!scan(tokens.endCall)) {\n        error('Missing )');\n      }\n      return result;\n    }\n  }\n  function matchLinearOrientation() {\n    return matchSideOrCorner() || matchAngle();\n  }\n  function matchSideOrCorner() {\n    return match('directional', tokens.sideOrCorner, 1);\n  }\n  function matchAngle() {\n    return match('angular', tokens.angleValue, 1);\n  }\n  function matchListRadialOrientations() {\n    var radialOrientations,\n      radialOrientation = matchRadialOrientation(),\n      lookaheadCache;\n    if (radialOrientation) {\n      radialOrientations = [];\n      radialOrientations.push(radialOrientation);\n      lookaheadCache = input;\n      if (scan(tokens.comma)) {\n        radialOrientation = matchRadialOrientation();\n        if (radialOrientation) {\n          radialOrientations.push(radialOrientation);\n        } else {\n          input = lookaheadCache;\n        }\n      }\n    }\n    return radialOrientations;\n  }\n  function matchRadialOrientation() {\n    var radialType = matchCircle() || matchEllipse();\n    if (radialType) {\n      radialType.at = matchAtPosition();\n    } else {\n      var extent = matchExtentKeyword();\n      if (extent) {\n        radialType = extent;\n        var positionAt = matchAtPosition();\n        if (positionAt) {\n          radialType.at = positionAt;\n        }\n      } else {\n        var defaultPosition = matchPositioning();\n        if (defaultPosition) {\n          radialType = {\n            type: 'default-radial',\n            at: defaultPosition\n          };\n        }\n      }\n    }\n    return radialType;\n  }\n  function matchCircle() {\n    var circle = match('shape', /^(circle)/i, 0);\n    if (circle) {\n      circle.style = matchLength() || matchExtentKeyword();\n    }\n    return circle;\n  }\n  function matchEllipse() {\n    var ellipse = match('shape', /^(ellipse)/i, 0);\n    if (ellipse) {\n      ellipse.style = matchDistance() || matchExtentKeyword();\n    }\n    return ellipse;\n  }\n  function matchExtentKeyword() {\n    return match('extent-keyword', tokens.extentKeywords, 1);\n  }\n  function matchAtPosition() {\n    if (match('position', /^at/, 0)) {\n      var positioning = matchPositioning();\n      if (!positioning) {\n        error('Missing positioning value');\n      }\n      return positioning;\n    }\n  }\n  function matchPositioning() {\n    var location = matchCoordinates();\n    if (location.x || location.y) {\n      return {\n        type: 'position',\n        value: location\n      };\n    }\n  }\n  function matchCoordinates() {\n    return {\n      x: matchDistance(),\n      y: matchDistance()\n    };\n  }\n  function matchListing(matcher) {\n    var captures = matcher(),\n      result = [];\n    if (captures) {\n      result.push(captures);\n      while (scan(tokens.comma)) {\n        captures = matcher();\n        if (captures) {\n          result.push(captures);\n        } else {\n          error('One extra comma');\n        }\n      }\n    }\n    return result;\n  }\n  function matchColorStop() {\n    var color = matchColor();\n    if (!color) {\n      error('Expected color definition');\n    }\n    color.length = matchDistance();\n    return color;\n  }\n  function matchColor() {\n    return matchHexColor() || matchRGBAColor() || matchRGBColor() || matchLiteralColor();\n  }\n  function matchLiteralColor() {\n    return match('literal', tokens.literalColor, 0);\n  }\n  function matchHexColor() {\n    return match('hex', tokens.hexColor, 1);\n  }\n  function matchRGBColor() {\n    return matchCall(tokens.rgbColor, function () {\n      return {\n        type: 'rgb',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n  function matchRGBAColor() {\n    return matchCall(tokens.rgbaColor, function () {\n      return {\n        type: 'rgba',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n  function matchNumber() {\n    return scan(tokens.number)[1];\n  }\n  function matchDistance() {\n    return match('%', tokens.percentageValue, 1) || matchPositionKeyword() || matchLength();\n  }\n  function matchPositionKeyword() {\n    return match('position-keyword', tokens.positionKeywords, 1);\n  }\n  function matchLength() {\n    return match('px', tokens.pixelValue, 1) || match('em', tokens.emValue, 1);\n  }\n  function match(type, pattern, captureIndex) {\n    var captures = scan(pattern);\n    if (captures) {\n      return {\n        type: type,\n        value: captures[captureIndex]\n      };\n    }\n  }\n  function scan(regexp) {\n    var captures, blankCaptures;\n    blankCaptures = /^[\\n\\r\\t\\s]+/.exec(input);\n    if (blankCaptures) {\n      consume(blankCaptures[0].length);\n    }\n    captures = regexp.exec(input);\n    if (captures) {\n      consume(captures[0].length);\n    }\n    return captures;\n  }\n  function consume(size) {\n    input = input.substr(size);\n  }\n  return function (code) {\n    input = code.toString();\n    return getAST();\n  };\n}();\nexports.parse = GradientParser.parse;\nexports.stringify = GradientParser.stringify;","map":{"version":3,"names":["GradientParser","stringify","visitor","visit_linear-gradient","node","visit_gradient","visit_repeating-linear-gradient","visit_radial-gradient","visit_repeating-radial-gradient","orientation","visit","type","colorStops","visit_shape","result","value","at","style","visit_default-radial","visit_extent-keyword","visit_position-keyword","visit_position","x","y","visit_%","visit_em","visit_px","visit_literal","visit_color","visit_hex","visit_rgb","join","visit_rgba","resultColor","length","visit_angular","visit_directional","visit_array","elements","size","forEach","element","i","Array","nodeVisitor","Error","root","parse","tokens","linearGradient","repeatingLinearGradient","radialGradient","repeatingRadialGradient","sideOrCorner","extentKeywords","positionKeywords","pixelValue","percentageValue","emValue","angleValue","startCall","endCall","comma","hexColor","literalColor","rgbColor","rgbaColor","number","input","error","msg","err","source","getAST","ast","matchListDefinitions","matchListing","matchDefinition","matchGradient","matchLinearOrientation","matchListRadialOrientations","gradientType","pattern","orientationMatcher","matchCall","captures","scan","matchColorStop","callback","matchSideOrCorner","matchAngle","match","radialOrientations","radialOrientation","matchRadialOrientation","lookaheadCache","push","radialType","matchCircle","matchEllipse","matchAtPosition","extent","matchExtentKeyword","positionAt","defaultPosition","matchPositioning","circle","matchLength","ellipse","matchDistance","positioning","location","matchCoordinates","matcher","color","matchColor","matchHexColor","matchRGBAColor","matchRGBColor","matchLiteralColor","matchNumber","matchPositionKeyword","captureIndex","regexp","blankCaptures","exec","consume","substr","code","toString","exports"],"sources":["/Users/tnguoi/Desktop/SeekAdventureApp/client/node_modules/gradient-parser/build/node.js"],"sourcesContent":["// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = (GradientParser || {});\n\nGradientParser.stringify = (function() {\n\n  var visitor = {\n\n    'visit_linear-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_repeating-linear-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_radial-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_repeating-radial-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_gradient': function(node) {\n      var orientation = visitor.visit(node.orientation);\n      if (orientation) {\n        orientation += ', ';\n      }\n\n      return node.type + '(' + orientation + visitor.visit(node.colorStops) + ')';\n    },\n\n    'visit_shape': function(node) {\n      var result = node.value,\n          at = visitor.visit(node.at),\n          style = visitor.visit(node.style);\n\n      if (style) {\n        result += ' ' + style;\n      }\n\n      if (at) {\n        result += ' at ' + at;\n      }\n\n      return result;\n    },\n\n    'visit_default-radial': function(node) {\n      var result = '',\n          at = visitor.visit(node.at);\n\n      if (at) {\n        result += at;\n      }\n      return result;\n    },\n\n    'visit_extent-keyword': function(node) {\n      var result = node.value,\n          at = visitor.visit(node.at);\n\n      if (at) {\n        result += ' at ' + at;\n      }\n\n      return result;\n    },\n\n    'visit_position-keyword': function(node) {\n      return node.value;\n    },\n\n    'visit_position': function(node) {\n      return visitor.visit(node.value.x) + ' ' + visitor.visit(node.value.y);\n    },\n\n    'visit_%': function(node) {\n      return node.value + '%';\n    },\n\n    'visit_em': function(node) {\n      return node.value + 'em';\n    },\n\n    'visit_px': function(node) {\n      return node.value + 'px';\n    },\n\n    'visit_literal': function(node) {\n      return visitor.visit_color(node.value, node);\n    },\n\n    'visit_hex': function(node) {\n      return visitor.visit_color('#' + node.value, node);\n    },\n\n    'visit_rgb': function(node) {\n      return visitor.visit_color('rgb(' + node.value.join(', ') + ')', node);\n    },\n\n    'visit_rgba': function(node) {\n      return visitor.visit_color('rgba(' + node.value.join(', ') + ')', node);\n    },\n\n    'visit_color': function(resultColor, node) {\n      var result = resultColor,\n          length = visitor.visit(node.length);\n\n      if (length) {\n        result += ' ' + length;\n      }\n      return result;\n    },\n\n    'visit_angular': function(node) {\n      return node.value + 'deg';\n    },\n\n    'visit_directional': function(node) {\n      return 'to ' + node.value;\n    },\n\n    'visit_array': function(elements) {\n      var result = '',\n          size = elements.length;\n\n      elements.forEach(function(element, i) {\n        result += visitor.visit(element);\n        if (i < size - 1) {\n          result += ', ';\n        }\n      });\n\n      return result;\n    },\n\n    'visit': function(element) {\n      if (!element) {\n        return '';\n      }\n      var result = '';\n\n      if (element instanceof Array) {\n        return visitor.visit_array(element, result);\n      } else if (element.type) {\n        var nodeVisitor = visitor['visit_' + element.type];\n        if (nodeVisitor) {\n          return nodeVisitor(element);\n        } else {\n          throw Error('Missing visitor visit_' + element.type);\n        }\n      } else {\n        throw Error('Invalid node.');\n      }\n    }\n\n  };\n\n  return function(root) {\n    return visitor.visit(root);\n  };\n})();\n\n// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = (GradientParser || {});\n\nGradientParser.parse = (function() {\n\n  var tokens = {\n    linearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,\n    repeatingLinearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,\n    radialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,\n    repeatingRadialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,\n    sideOrCorner: /^to (left (top|bottom)|right (top|bottom)|left|right|top|bottom)/i,\n    extentKeywords: /^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,\n    positionKeywords: /^(left|center|right|top|bottom)/i,\n    pixelValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,\n    percentageValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,\n    emValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))em/,\n    angleValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,\n    startCall: /^\\(/,\n    endCall: /^\\)/,\n    comma: /^,/,\n    hexColor: /^\\#([0-9a-fA-F]+)/,\n    literalColor: /^([a-zA-Z]+)/,\n    rgbColor: /^rgb/i,\n    rgbaColor: /^rgba/i,\n    number: /^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/\n  };\n\n  var input = '';\n\n  function error(msg) {\n    var err = new Error(input + ': ' + msg);\n    err.source = input;\n    throw err;\n  }\n\n  function getAST() {\n    var ast = matchListDefinitions();\n\n    if (input.length > 0) {\n      error('Invalid input not EOF');\n    }\n\n    return ast;\n  }\n\n  function matchListDefinitions() {\n    return matchListing(matchDefinition);\n  }\n\n  function matchDefinition() {\n    return matchGradient(\n            'linear-gradient',\n            tokens.linearGradient,\n            matchLinearOrientation) ||\n\n          matchGradient(\n            'repeating-linear-gradient',\n            tokens.repeatingLinearGradient,\n            matchLinearOrientation) ||\n\n          matchGradient(\n            'radial-gradient',\n            tokens.radialGradient,\n            matchListRadialOrientations) ||\n\n          matchGradient(\n            'repeating-radial-gradient',\n            tokens.repeatingRadialGradient,\n            matchListRadialOrientations);\n  }\n\n  function matchGradient(gradientType, pattern, orientationMatcher) {\n    return matchCall(pattern, function(captures) {\n\n      var orientation = orientationMatcher();\n      if (orientation) {\n        if (!scan(tokens.comma)) {\n          error('Missing comma before color stops');\n        }\n      }\n\n      return {\n        type: gradientType,\n        orientation: orientation,\n        colorStops: matchListing(matchColorStop)\n      };\n    });\n  }\n\n  function matchCall(pattern, callback) {\n    var captures = scan(pattern);\n\n    if (captures) {\n      if (!scan(tokens.startCall)) {\n        error('Missing (');\n      }\n\n      var result = callback(captures);\n\n      if (!scan(tokens.endCall)) {\n        error('Missing )');\n      }\n\n      return result;\n    }\n  }\n\n  function matchLinearOrientation() {\n    return matchSideOrCorner() ||\n      matchAngle();\n  }\n\n  function matchSideOrCorner() {\n    return match('directional', tokens.sideOrCorner, 1);\n  }\n\n  function matchAngle() {\n    return match('angular', tokens.angleValue, 1);\n  }\n\n  function matchListRadialOrientations() {\n    var radialOrientations,\n        radialOrientation = matchRadialOrientation(),\n        lookaheadCache;\n\n    if (radialOrientation) {\n      radialOrientations = [];\n      radialOrientations.push(radialOrientation);\n\n      lookaheadCache = input;\n      if (scan(tokens.comma)) {\n        radialOrientation = matchRadialOrientation();\n        if (radialOrientation) {\n          radialOrientations.push(radialOrientation);\n        } else {\n          input = lookaheadCache;\n        }\n      }\n    }\n\n    return radialOrientations;\n  }\n\n  function matchRadialOrientation() {\n    var radialType = matchCircle() ||\n      matchEllipse();\n\n    if (radialType) {\n      radialType.at = matchAtPosition();\n    } else {\n      var extent = matchExtentKeyword();\n      if (extent) {\n        radialType = extent;\n        var positionAt = matchAtPosition();\n        if (positionAt) {\n          radialType.at = positionAt;\n        }\n      } else {\n        var defaultPosition = matchPositioning();\n        if (defaultPosition) {\n          radialType = {\n            type: 'default-radial',\n            at: defaultPosition\n          };\n        }\n      }\n    }\n\n    return radialType;\n  }\n\n  function matchCircle() {\n    var circle = match('shape', /^(circle)/i, 0);\n\n    if (circle) {\n      circle.style = matchLength() || matchExtentKeyword();\n    }\n\n    return circle;\n  }\n\n  function matchEllipse() {\n    var ellipse = match('shape', /^(ellipse)/i, 0);\n\n    if (ellipse) {\n      ellipse.style =  matchDistance() || matchExtentKeyword();\n    }\n\n    return ellipse;\n  }\n\n  function matchExtentKeyword() {\n    return match('extent-keyword', tokens.extentKeywords, 1);\n  }\n\n  function matchAtPosition() {\n    if (match('position', /^at/, 0)) {\n      var positioning = matchPositioning();\n\n      if (!positioning) {\n        error('Missing positioning value');\n      }\n\n      return positioning;\n    }\n  }\n\n  function matchPositioning() {\n    var location = matchCoordinates();\n\n    if (location.x || location.y) {\n      return {\n        type: 'position',\n        value: location\n      };\n    }\n  }\n\n  function matchCoordinates() {\n    return {\n      x: matchDistance(),\n      y: matchDistance()\n    };\n  }\n\n  function matchListing(matcher) {\n    var captures = matcher(),\n      result = [];\n\n    if (captures) {\n      result.push(captures);\n      while (scan(tokens.comma)) {\n        captures = matcher();\n        if (captures) {\n          result.push(captures);\n        } else {\n          error('One extra comma');\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function matchColorStop() {\n    var color = matchColor();\n\n    if (!color) {\n      error('Expected color definition');\n    }\n\n    color.length = matchDistance();\n    return color;\n  }\n\n  function matchColor() {\n    return matchHexColor() ||\n      matchRGBAColor() ||\n      matchRGBColor() ||\n      matchLiteralColor();\n  }\n\n  function matchLiteralColor() {\n    return match('literal', tokens.literalColor, 0);\n  }\n\n  function matchHexColor() {\n    return match('hex', tokens.hexColor, 1);\n  }\n\n  function matchRGBColor() {\n    return matchCall(tokens.rgbColor, function() {\n      return  {\n        type: 'rgb',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n\n  function matchRGBAColor() {\n    return matchCall(tokens.rgbaColor, function() {\n      return  {\n        type: 'rgba',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n\n  function matchNumber() {\n    return scan(tokens.number)[1];\n  }\n\n  function matchDistance() {\n    return match('%', tokens.percentageValue, 1) ||\n      matchPositionKeyword() ||\n      matchLength();\n  }\n\n  function matchPositionKeyword() {\n    return match('position-keyword', tokens.positionKeywords, 1);\n  }\n\n  function matchLength() {\n    return match('px', tokens.pixelValue, 1) ||\n      match('em', tokens.emValue, 1);\n  }\n\n  function match(type, pattern, captureIndex) {\n    var captures = scan(pattern);\n    if (captures) {\n      return {\n        type: type,\n        value: captures[captureIndex]\n      };\n    }\n  }\n\n  function scan(regexp) {\n    var captures,\n        blankCaptures;\n\n    blankCaptures = /^[\\n\\r\\t\\s]+/.exec(input);\n    if (blankCaptures) {\n        consume(blankCaptures[0].length);\n    }\n\n    captures = regexp.exec(input);\n    if (captures) {\n        consume(captures[0].length);\n    }\n\n    return captures;\n  }\n\n  function consume(size) {\n    input = input.substr(size);\n  }\n\n  return function(code) {\n    input = code.toString();\n    return getAST();\n  };\n})();\n\nexports.parse = GradientParser.parse;\nexports.stringify = GradientParser.stringify;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}