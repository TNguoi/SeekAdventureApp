import { setFileScope, endFileScope } from "@vanilla-extract/css/fileScope";
import { style, createThemeContract, assignVars, styleVariants } from "@vanilla-extract/css";
import { colorModeStyle } from "../../css/colorModeStyle.mjs";
import { vars } from "../../themes/vars.css.mjs";
setFileScope("src/lib/components/Divider/Divider.css.ts?used", "braid-design-system");
const base = style({
  height: vars.borderWidth.standard
}, "base");
const weightVars = createThemeContract({
  regular: null,
  strong: null
});
const regular = style({
  background: weightVars.regular
}, "regular");
const strong = style({
  background: weightVars.strong
}, "strong");
const lightModeVars = {
  vars: assignVars(weightVars, {
    regular: vars.borderColor.neutralLight,
    strong: vars.borderColor.neutral
  })
};
const darkModeVars = {
  vars: assignVars(weightVars, {
    regular: vars.borderColor.neutral,
    strong: vars.borderColor.neutralLight
  })
};
const lightModeWeight = styleVariants({
  light: colorModeStyle({
    lightMode: lightModeVars
  }),
  dark: colorModeStyle({
    lightMode: darkModeVars
  })
}, "lightModeWeight");
const darkModeWeight = styleVariants({
  light: colorModeStyle({
    darkMode: lightModeVars
  }),
  dark: colorModeStyle({
    darkMode: darkModeVars
  })
}, "darkModeWeight");
endFileScope();
export {
  base,
  darkModeWeight,
  lightModeWeight,
  regular,
  strong
};
